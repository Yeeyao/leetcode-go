package stack

/*
632. Smallest Range Covering Elements from K Lists
你有 k 个 非递减排列 的整数列表。找到一个 最小 区间，使得 k 个列表中的每个列表至少有一个数包含在其中。
找交叉？需要注意这些数组元素是非递减的。
这道题本质上就是在 m 个一维数组中各取出一个数字，重新组成新的数组 A，使得新的数组 A 中最大值和最小值的差值（diff）最小。
这里的多路在于多个输入的数组，关键需要找到堆保存什么信息，当前的最小区间吧。然后每个数组同样是移动指针
这里同样是记录下当前的最小 diff，然后每个数组一个指针来移动，类似 1439，每一次所有数组的指针位置结果和当前的最小值保存到堆，使用另外一个变量保存当前堆的最大值
更新的时候选择其中一个数组指针前进
*/

func smallestRange(nums [][]int) []int {

}
